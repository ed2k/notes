from progpow import *

def to_hexstring(a):
  r = ''
  for i in xrange(32):
    v = (uint8array_getitem(a,i))
    r += '%02x' % v
  return r

def to_array(s):
  r = new_uint8array(len(s)/2)
  i = 0
  while len(s) > 0:
    h = s[:2]
    hex_int = int('0x'+h, 16)
    uint8array_setitem(r,i, hex_int)
    s = s[2:]
    i+=1
  return r

header = to_array(
    "000000206812f2a87241851756cb79524ddb813a9f83bb4bbcdda51abe07daeba50000001280c5e80b3472eb0f63f14e0c2edebbbe0409fb30598ca0a5ee3674f9c7f875f3dd07000000000000000000000000000000000000000000000000000000000055b6375b1c88011e00000000000000000000000000000000000000000000000018fc3d3100000000");
mix = to_array(
    "5883f27cabc838b98e7cd660c5ee91e8b1882bd17f9e428b5aa6bc951d5a16f8");
nonce = (0x313dfc18);
out = new_uint8array(32)

r = get_block_progpow_hash_from_mix(header, mix, nonce, out)

o = to_hexstring(out)
print (r, o)
print (o == "00000148b6715b3a32a7b36e5c820fcd4660acb72947ab9ebe4949134688066e")
#don't forget to call delete_

def arr_to_hexstring(a):
  r = ''
  for i in xrange(len(a)):
    v = (a[i])
    r += '%02x' % v
  return r

def parse_rust_input():
  hash = [
    0xf5, 0x7e, 0x6f, 0x3a, 0xcf, 0xc0, 0xdd, 0x4b, 0x5b, 0xf2, 0xbe, 0xe4, 0x0a, 0xb3,
    0x35, 0x8a, 0xa6, 0x87, 0x73, 0xa8, 0xd0, 0x9f, 0x5e, 0x59, 0x5e, 0xab, 0x55, 0x94,
    0x05, 0x52, 0x7d, 0x72,
  ]
  print (arr_to_hexstring(hash))
  mix_hash = [
    0x1f, 0xff, 0x04, 0xce, 0xc9, 0x41, 0x73, 0xfd, 0x59, 0x1e, 0x3d, 0x89, 0x60, 0xce,
    0x6b, 0xdf, 0x8b, 0x19, 0x71, 0x04, 0x8c, 0x71, 0xff, 0x93, 0x7b, 0xb2, 0xd3, 0x2a,
    0x64, 0x31, 0xab, 0x6d,
  ]
  print (arr_to_hexstring(mix_hash))

  boundary = [
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x3e, 0x9b, 0x6c, 0x69, 0xbc, 0x2c, 0xe2, 0xa2,
    0x4a, 0x8e, 0x95, 0x69, 0xef, 0xc7, 0xd7, 0x1b, 0x33, 0x35, 0xdf, 0x36, 0x8c, 0x9a,
    0xe9, 0x7e, 0x53, 0x84,
  ]
  print (arr_to_hexstring(boundary))
parse_rust_input()